<compass> => <twoLayerCompass> | <threeLayerCompass> [20];
<twoLayerCompass> => <labels> REMEMBER("start") <bottomLayer> <topLayer>;
<threeLayerCompass> => <twoLayerCompass> <centerDecoration>;
<$labelFont> => "Serif" | "Lobster" | "IM Fell English";
<$labelSize> => 14 | 16 | 18;
<$labelStyle> => "normal" | "bold" | "bolder";
<labels> => RTEXT(0, 4, <$labelFont>, <$labelSize>, "black", "", <$labelStyle>, "vertical", '["N", "E", "S", "W"]') SPACE(8);
<bottomLayer> => SPACE(`Utils.randIntRange(10,30)`) <ringOrScale>
	      	     REMEMBER("insideEdge") |
                 SPACE(`Utils.randIntRange(5,20)`) <ringOrScale>
		     REMEMBER("insideEdge") SPACE(3) <ring>;
<ring> => <thickThin> | <thinThick> | <thinThinThin> | <thinThickThin> | <radialRing>;
<ringOrScale> => <thickThin> | <thinThick> | <thinThinThin> |
	      	 <thinThickThin> | <scaleRing> [4];
<$ringSpacing> => 1 | 2 | 2 | 3 | 3 | 4;
<thickThin> => <thickCircle> SPACE(<$ringSpacing>) <thinCircle>;
<thinThick> => <thinCircle> SPACE(<$ringSpacing>) <thickCircle>;
<thinThinThin> => <thinCircle> SPACE(<$ringSpacing>) <thinCircle>
	          SPACE(<$ringSpacing>) <thinCircle>;
<thinThickThin> => <thinCircle> SPACE(<$ringSpacing>) <thickCircle>
                   SPACE(<$ringSpacing>) <thinCircle>;
<$thickWidth> => 4 | 3.5 | 3;
<$thinWidth> => 1.5 | 1 | 0.5;
<thickCircle> => CIRCLE(<$thickWidth>, "black", "none");
<thinCircle> => CIRCLE(<$thinWidth>, "black", "none");
<$pointLevels> => 1 `<@numInsideRadialElements>=Utils.randElement([4,8,12,16,20,24,28,32]),""` |
		2 `<@numInsideRadialElements>=Utils.randElement([8,16,24,32]),""` |
		3 `<@numInsideRadialElements>=Utils.randElement([16,32]),""` ;
<topLayer> =>  <cardinalPoints>
	       [`(<$pointLevels> == 1) ? 1 : 0`] | 
	       <interCardinalPoints> <cardinalPoints>
	       [`(<$pointLevels> == 2) ? 1 : 0`] |
	       <interOrdinalPoints> <interCardinalPoints> <cardinalPoints>
	       [`(<$pointLevels> == 3) ? 1 : 0`];
<interOrdinalPoints> => RECALL("insideEdge")
		      	 SPACE(`Utils.randIntRange(5,10)`)
			 <interOrdinalPoint>;
<interOrdinalPoint> => RPOINT(0.39269908, 8, `Utils.randRange(0.80,0.925)`,
			       1, 1, "black", "white", "black") |
                        RWAVE(0.39269908, 8, `Utils.randRange(0.80,0.925)`,
			       1, 1, "black", "white", "black");		
<interCardinalPoints> => RECALL("insideEdge")
		      	 SPACE(`Utils.randIntRange(0,5)`)
			 <interCardinalPoint>;
<interCardinalPoint> => RPOINT(0.7854, 4, `Utils.randRange(0.80,0.925)`,
			       1, 1, "black", "white", "black") |
                        RWAVE(0.7854, 4, `Utils.randRange(0.80,0.925)`,
			       1, 1, "black", "white", "black");
<$shoulder> => `Utils.randRange(0.825,0.925)`;
<cardinalPoints> => RECALL("start")
		    RPOINT(0, 4, <$shoulder>, 1, 1, "black", "white", "black");
# Various scale measurements
<$scaleDivisions> => `Utils.randIntRange(4,16)*2` ;
<$scaleDivisions8> => `Utils.randIntRange(1,4)*8` ;
<$scaleStart> => 0 | `Math.PI/<$scaleDivisions>/2` ;
<$scaleWidth> => `Utils.randRange(2,6)`;
<$scaleCircle> => <thinCircle> | <thinCircle> SPACE(<$thinWidth>) <thinCircle>;
# A scale
<scaleRing> => <$scaleCircle>
	       RLINE(0, <$scaleDivisions8>, <$scaleWidth>, <$thinWidth>, "black")
	       SPACE(`<$scaleWidth>`)
	       <thinCircle>
	       RLINE(0, `<$scaleDivisions8>*4`, <$scaleWidth>, <$thinWidth>, "black")
	       SPACE(`<$scaleWidth>`)
	       <$scaleCircle> [5] |
	       <$scaleCircle>
	       RLINE(0, <$scaleDivisions>, <$scaleWidth>, <$thinWidth>, "black")
	       SPACE(`<$scaleWidth>`) <$scaleCircle>  [20] |
	       <$scaleCircle>
	       RARC(<$scaleStart>, <$scaleDivisions>,
	            `Math.PI/<$scaleDivisions>`,
	            <$scaleWidth>, "black")
	       SPACE(`<$scaleWidth>`) <$scaleCircle> [20] |
	       <$scaleCircle>
	       RARC(`Math.PI/<$scaleDivisions>/2`, <$scaleDivisions>,
	            `Math.PI/<$scaleDivisions>`,
	            <$scaleWidth>, "black")
	       SPACE(`<$scaleWidth>/3`) 
	       RARC(`Math.PI/<$scaleDivisions>/2`, `<$scaleDivisions>*2`,
	            `Math.PI/(2*<$scaleDivisions>)`,
	            `<$scaleWidth>/3`, "black")
	       RARC(0, `<$scaleDivisions>*2`,
	            `Math.PI/(2*<$scaleDivisions>)`,
	            `<$scaleWidth>/3`, "white")
	       SPACE(`2*<$scaleWidth>/3`) <$scaleCircle> |
	       <$scaleCircle>
	       RARC(`Math.PI/<$scaleDivisions>/2`, <$scaleDivisions>,
	            `Math.PI/<$scaleDivisions>`,
	            <$scaleWidth>, "black")
	       SPACE(`<$scaleWidth>/3`) 
	       RARC(`Math.PI/<$scaleDivisions>/2`, `<$scaleDivisions>*2`,
	            `Math.PI/(2*<$scaleDivisions>)`,
	            `<$scaleWidth>/3`, "black")
	       SPACE(`2*<$scaleWidth>/3`) <$scaleCircle> |
	       <$scaleCircle>
	       RARC(`Math.PI/<$scaleDivisions>/2`, <$scaleDivisions>,
	            `Math.PI/<$scaleDivisions>`,
	            <$scaleWidth>, "black")
	       SPACE(`<$scaleWidth>/3`) 
	       RARC(`Math.PI/<$scaleDivisions>/2`, `<$scaleDivisions>*2`,
	            `Math.PI/(2*<$scaleDivisions>)`,
	            `<$scaleWidth>/3`, "white")
	       SPACE(`2*<$scaleWidth>/3`) <$scaleCircle> |
	       <$scaleCircle>
	       RARC(`Math.PI/<$scaleDivisions>/2`, <$scaleDivisions>,
	            `Math.PI/<$scaleDivisions>`,
	            <$scaleWidth>, "black")
	       SPACE(`<$scaleWidth>/3`) 
	       RARC(0, `<$scaleDivisions>*2`,
	            `Math.PI/(2*<$scaleDivisions>)`,
	            `<$scaleWidth>/3`, "white")
	       SPACE(`2*<$scaleWidth>/3`) <$scaleCircle> ;
<$scaleCircle> => <thinCircle> | <thinCircle> SPACE(<$thinWidth>) <thinCircle>;
# Radial element rings
<radialRing> => <radialElementsOnly> | <radialElementsFramed> | <radialElementsNecklace> |
	        <radialElementsDark> | <radialElementsAlternating>;
<$relementSize> => `Utils.randRange(4,7)`;
<relementLineWidth> => 0.5 | 1;
<numRadialElements> => 16 | 24 | 32;
<$numRadialElementsShared> => 16 | 24 | 32;
<radialElementsOnly> => SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <numRadialElements>, `<$relementSize>`,
		     		   <relementLineWidth>, "black", "white")
			SPACE(`<$relementSize>`) |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "black", "white") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "black", "white", "black") |
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "black", "white") | 
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "black", "white", "black") |
			SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <numRadialElements>, `<$relementSize>`,
		     		   <relementLineWidth>, "black", "black")
			SPACE(`<$relementSize>`) |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "black", "black") |
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "black", "black");
<radialElementsAlternating> => <radialElementsFirst> <radialElementsSecond>;
<$numAlternatingElements> => 8 | 12 | 16 | 20;
<$relementFirstSize> => `Utils.randRange(4,5.5)`;
<$relementSecondSize> => `Utils.randRange(5.5,7)`;
# Needs to return to the start radius
# Firsts are smaller than seconds, so they need to center in <$relementSecondSize>
<radialElementsFirst> => SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
		     	RCIRCLE(0, <$numAlternatingElements>, `<$relementFirstSize>`,
		     		   <relementLineWidth>, "black", "white")
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
		     	RCIRCLE(0, <$numAlternatingElements>, `<$relementFirstSize>`,
		     		   <relementLineWidth>, "black", "black")
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
		     	RTRI(0, <$numAlternatingElements>, -<$relementFirstSize>, <$relementFirstSize>,
			        <relementLineWidth>, "black", "white")
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
		     	RTRI(0, <$numAlternatingElements>, -<$relementFirstSize>, <$relementFirstSize>,
			        <relementLineWidth>, "black", "black")
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
		     	RTRI(0, <$numAlternatingElements>, -<$relementFirstSize>, <$relementFirstSize>,
			        <relementLineWidth>, "black", "white", "black") 
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
			RDIAMOND(0, <$numAlternatingElements>, -<$relementFirstSize>, <$relementFirstSize>,
				    <relementLineWidth>, "black", "white") 
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
			RDIAMOND(0, <$numAlternatingElements>, -<$relementFirstSize>, <$relementFirstSize>,
				    <relementLineWidth>, "black", "black") 
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`) |
			SPACE(`<$relementSecondSize>/2+<$relementFirstSize>/2`)
			RDIAMOND(0, <$numAlternatingElements>, -<$relementFirstSize>, <$relementFirstSize>,
				    <relementLineWidth>, "black", "white", "black")
			SPACE(-`<$relementSecondSize>/2+<$relementFirstSize>/2`);	    
<radialElementsSecond> => SPACE(`<$relementSecondSize>`)
		     	RCIRCLE(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, `<$relementSecondSize>`,
		     		   <relementLineWidth>, "black", "white") |
			SPACE(`<$relementSecondSize>`)
		     	RCIRCLE(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, `<$relementSecondSize>`,
		     		   <relementLineWidth>, "black", "black") |
			SPACE(`<$relementSecondSize>`)
		     	RTRI(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, -<$relementSecondSize>,
			     <$relementSecondSize>, <relementLineWidth>, "black", "white") |
			SPACE(`<$relementSecondSize>`)
		     	RTRI(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, -<$relementSecondSize>,
			     <$relementSecondSize>, <relementLineWidth>, "black", "black") |
			SPACE(`<$relementSecondSize>`)
		     	RTRI(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, -<$relementSecondSize>,
			     <$relementSecondSize>, <relementLineWidth>, "black", "white", "black") |
			SPACE(`<$relementSecondSize>`)
			RDIAMOND(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, -<$relementSecondSize>,
			         <$relementSecondSize>, <relementLineWidth>, "black", "white") | 
			SPACE(`<$relementSecondSize>`)
			RDIAMOND(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, -<$relementSecondSize>,
			         <$relementSecondSize>, <relementLineWidth>, "black", "black") | 
			SPACE(`<$relementSecondSize>`)
			RDIAMOND(`Math.PI/<$numAlternatingElements>`, <$numAlternatingElements>, -<$relementSecondSize>,
			         <$relementSecondSize>, <relementLineWidth>, "black", "white", "black");
<$frameCircle> => <thinCircle> [2] | <thinCircle> SPACE(<$thinWidth>) <thinCircle>;
<radialElementsFramed> => <$frameCircle>
		       	  SPACE(`<$relementSize>/2`)
		       	  <radialElementsPlus>
		          SPACE(`<$relementSize>/2`)
			  <$frameCircle> |
			  <$frameCircle>
			  SPACE(`<$relementSize>/2`)
		       	  <radialElementsAlternating>
		          SPACE(`<$relementSize>/2`)
			  <$frameCircle>;
<cord> => SPACE(-0.5)
          CIRCLE(1, "black", "none")
	  SPACE(-0.5) |
	  SPACE(-0.375)
          CIRCLE(0.5, "black", "none")
	  SPACE(0.50)
          CIRCLE(0.5, "black", "none")
	  SPACE(-0.75);
<radialElementsNecklace> => SPACE(`<$relementSize>/2`)
			    <cord>
			    SPACE(`-(<$relementSize>/2)`)
			    <radialElementsPlus> 
			     |
			    SPACE(`<$relementSize>/2`)
			    <cord>
			    SPACE(`-(<$relementSize>/2)`)
			    <radialElementsAlternating>;
<radialElementsPlus> => SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <numRadialElements>, `<$relementSize>`,
		     		   <relementLineWidth>, "black", "white") |
			SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <numRadialElements>, `<$relementSize>`,
		     		   <relementLineWidth>, "black", "black") |
			SPACE(`1.5*<$relementSize>`)
			RLINE(0, <numRadialElements>, `<$relementSize>*-2`, `Utils.randRange(1,2.5)`, "black")
			SPACE(`-0.5*<$relementSize>`) |
			SPACE(`1.0*<$relementSize>`)
			RLINE(0, <numRadialElements>, `<$relementSize>*-1.5`, `Utils.randRange(1,2.5)`, "black") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "black", "white") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "black", "black") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "black", "white", "black") |
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "black", "white") | 
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "black", "black") | 
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "black", "white", "black") |
			SPACE(`3*<$relementSize>/4`)
		     	RTRI(0, <$numRadialElementsShared>, -`3*<$relementSize>/4.1`, `<$relementSize>/2.2`,
			        0.5, "black", "black")
			SPACE(`<$relementSize>/4`)
		     	RCIRCLE(0, <$numRadialElementsShared>, `<$relementSize>/2`,
		     		   0.5, "black", "black") |
			SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <$numRadialElementsShared>, `<$relementSize>`,
		     		   0.5, "black", "white")
			RLINE(0, <$numRadialElementsShared>, `-<$relementSize>`, 0.5, "black");
<radialElementsDark> => CIRCLE(`<$relementSize>*2`, "black", "none")
		     	SPACE(`-3*<$relementSize>/2`)
		     	<radialElementsReversed>
			SPACE(`<$relementSize>/2`) |
		     	<thinCircle> SPACE(<$thinWidth>)
			CIRCLE(`<$relementSize>*2`, "black", "none")
			SPACE(<$thinWidth>) <thinCircle> 
			SPACE(`-3*<$relementSize>/2-<$thinWidth>*2`) 
		     	<radialElementsReversed>
			SPACE(`<$relementSize>/2 + <$thinWidth>*2`);
<radialElementsReversed> => SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <numRadialElements>, `<$relementSize>`,
		     		   <relementLineWidth>, "white", "white") | 
			SPACE(`<$relementSize>`)
		     	RCIRCLE(0, <numRadialElements>, `<$relementSize>`,
		     		   <relementLineWidth>, "white", "black") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "white", "white") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "white", "black") |
			SPACE(`<$relementSize>`)
		     	RTRI(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
			        <relementLineWidth>, "white", "white", "black") |
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "white", "white") | 
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "white", "black") | 
			SPACE(`<$relementSize>`)
			RDIAMOND(0, <numRadialElements>, -<$relementSize>, <$relementSize>,
				    <relementLineWidth>, "white", "white", "black");
#
#  Center Decorations
#
<centerDecoration> => RECALL("shoulder") SPACE(`Utils.rand(-2,2)`) <centerDecorationTypes>;
<centerDecorationTypes> => <circleFilled> | <whiteBlackCircle> | <whiteRing> |
			   <emptyCircle> <centerScale> | <centerRose> [100] | <centerStar> ;
<circleFilled> => <thinCircleFilled> | <thickCircleFilled> | <thickThinFilled> |
                <thinThickFilled>;
<$circleSpacingFilled> => 1 | 2 | 2 | 3;
<thickThinFilled> => <thickCircleFilled> SPACE(<$circleSpacingFilled>) <thinCircleFilled>;
<thinThickFilled> => <thinCircleFilled> SPACE(<$circleSpacingFilled>) <thickCircleFilled>;
<thinThinThinFilled> => <thinCircleFilled> SPACE(<$circleSpacingFilled>) <thinCircleFilled>
	          SPACE(<$circleSpacingFilled>) <thinCircleFilled>;
<thinThickThinFilled> => <thinCircleFilled> SPACE(<$circleSpacingFilled>) <thickCircleFilled>
                   SPACE(<$circleSpacingFilled>) <thinCircleFilled>;
<$thickWidthFilled> => 2.5 | 2 | 1.5;
<thickCircleFilled> => CIRCLE(<$thickWidthFilled>, "black", "white");
<thinCircleFilled> => CIRCLE(<$thinWidth>, "black", "white");
<whiteBlackCircle> => <thinCircleFilled> SPACE(`Utils.rand(1,2)*<$circleSpacingFilled>`) <circleBlack>;
<circleBlack> => CIRCLE(0, "black", "black");
<whiteRing> => <thinCircle> <thickWhiteCircle> <thinCircle>;
<thickWhiteCircle> => CIRCLE(<thickWhiteWidth>, "white", "none");
<thickWhiteWidth> => 3 | 2.5 | 2;
# A scale for center decorations
<emptyCircle> => SPACE(1) CIRCLE(0, "none", "white");
<$centerScaleStart> => 0 | `Math.PI/<$centerScaleDivisions>/2` ;
<$centerScaleWidth> => `Utils.randRange(1,3)`;
<$centerScaleDivisions> => `Utils.randElement([8, 12, 16])` ;
<centerScale> =>
	       CIRCLE(0.5, "black", "none")
	       RARC(<$centerScaleStart>, <$centerScaleDivisions>,
	            `Math.PI/<$centerScaleDivisions>`,
	            <$centerScaleWidth>, "black")
	       SPACE(`<$centerScaleWidth>`) CIRCLE(0.5, "black", "none");
# A rose
<centerRose> => <petals> | <petals> <roseCenter>;
<petals> => MOVE(14) <roseCircleWhite> SPACE(6)
	     	RCIRCLE(0, 12, 4.5, 0.5, "black", "white")
		SPACE(-2.25) CIRCLE(0, "none", "white") |
		MOVE(14) <roseCircleWhite> SPACE(6)
	     	RCIRCLE(0, 12, 4.7, 0.5, "black", "white")
		SPACE(-2) CIRCLE(0, "none", "white")
		SPACE(4.35) RCIRCLE(`Math.PI/10`, 10, 3.8, 0.5, "black", "white")
		SPACE(-1.75) CIRCLE(0, "none", "white")
		SPACE(3.5) RCIRCLE(0, 8, 2.9, 0.5, "black", "white")
		SPACE(-1) CIRCLE(0, "none", "white")
		SPACE(3) RCIRCLE(0, 6, 2.4, 0.5, "black", "white")
		SPACE(-0.5) CIRCLE(0, "none", "white")
		[100] |
		MOVE(14) <roseCircleWhite> SPACE(6)
	     	RCIRCLE(0, 12, 4.5, 0.5, "black", "white")
		SPACE(-2.25) CIRCLE(0, "none", "white")
		RLINE(0, 12, 0, 0.5, "black") |
		MOVE(14) <outerCircle> SPACE(6)
	     	RCIRCLE(0, 12, 4.5, 0.5, "black", "white")
		SPACE(-2.25) CIRCLE(0, "none", "white")
		RLINE(`Math.PI/12`, 12, 0, 0.5, "black");
<roseCenter> => SPACE(6) <roseCircleWhite> | SPACE(6) <roseCircleBlack>;
<outerCircle> => <roseCircleWhite> | <roseCircleBlack>;
<roseCircleWhite> => CIRCLE(0.5, "black", "white");
<roseCircleBlack> => CIRCLE(0.5, "white", "black");
# A center star
<centerStar> => MOVE(14) <roseCircleWhite> SPACE(1)
		   RPOINT(`-Math.PI/10`, 5, 0.75, 1, 0.25, "black", "black", "black")
		   MOVE(3) |
		   MOVE(14) <roseCircleWhite> SPACE(1)
		   RPOINT(`-Math.PI/10`, 5, 0.75, 1, 0.25, "black", "black", "black")
		   MOVE(3) <roseCircleWhite>;
